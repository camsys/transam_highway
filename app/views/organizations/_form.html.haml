.row
  = simple_form_for(@org,
  :as => :organization,
  :url => @org.new_record? ? organizations_path : organization_path,
  :method => @org.new_record? ? 'post' : 'put',
  :html => {:class => 'form-vertical org_form'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|
    - if @org.new_record?
      = f.input :organization_type_id, :as => :hidden
      = f.input :customer_id, :as => :hidden, :input_html => {:value => Customer.first.id}
    .col-md-6
      = dialog_tag('Corporate', {:icon => 'fa fa-book', :class => "header-part"}) do
        - field_custom = SystemConfigFieldCustomization.find_by(is_locked: true, table_name: 'organizations', field_name: 'name', active: true)
        = f.input :name, :required => true, :disabled => (field_custom.present? && eval(field_custom.code_frag))
        - field_custom = SystemConfigFieldCustomization.find_by(is_locked: true, table_name: 'organizations', field_name: 'short_name', active: true)
        = f.input :short_name, :required => true, :label => "Short Name", :disabled => (field_custom.present? && eval(field_custom.code_frag))
        = f.input :external_id, :label => "External ID"
        - if @org.respond_to? :parent
          = f.association :parent, :collection => Organization.includes(:organization_type).where.not(organization_types: {class_name: 'HighwayTeam'})
    .col-md-6
      = dialog_tag('Contact', {:icon => 'fa fa-book', :class => "header-part"}) do
        = f.input :phone, :required => true, :as => :tel, :hint => 'Format 123-456-7890'
        = f.input :fax, :as => :tel, :hint => 'Format 123-456-7890'
        = f.input :url, :required => true, :as => :url
        = f.input :country, :required => true, :label => "Country", collection: [[ 'United States of America', 'US']]
        = f.input :address1, :required => true, :label => "Address 1"
        = f.input :address2, :label => "Address 2"
        .row
          .col-sm-6
            = f.input :city, :required => true
          .col-sm-3
            = f.input :state, :required => true, :as => :select, :collection => ISO3166::Country['US'].states.keys
          .col-sm-3
            = f.input :zip, :required => true
        = f.input :county, :label => "County"
        - if User.new.respond_to? :email_in_org_domain_list
          = f.input :allowed_email_domains, :required => true, :label => 'Allowed Email Domains', :placeholder => 'To enter more than one domain, separate with |. Domains are the url that follows @ (ex: camsys.com).'

    .col-md-12
      = f.button :submit, :class => 'btn btn-primary'
      = submit_tag 'Cancel', :name => 'cancel', :class=>"btn btn-warning"

:javascript

  // jquery validations
  $('.org_form').validate({
    rules: {
      'organization[zip]': {
        zipcodeUS: true
      },
      'organization[phone]' : {
        phoneUS: true
      },
      'organization[fax]' : {
        phoneUS: true
      }
    },
    submitHandler: function(form) {
      form.submit();
    }
  });


