%ul.nav.nav-tabs
  %li
    %a{:href => '#bridge', :data =>{:toggle => 'tab'}}
      Bridge
  %li
    %a{:href => '#structure', :data =>{:toggle => 'tab'}}
      Highway Structure

  %li.active
    %a{:href => '#required', :data =>{:toggle => 'tab'}}
      Required Fields
  - if @asset.new_record?
    %li
      %a{:href => '#recommended', :data =>{:toggle => 'tab'}}
        Recommended Fields

= simple_form_for(@asset,
  :as => :asset,
  :url => @asset.new_record? ? inventory_index_path : inventory_path,
  :method => @asset.new_record? ? 'post' : 'put',
  :html => {:class => 'form-vertical'},
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
    :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input,
    :boolean => :vertical_boolean}) do |f|

  = hidden_field_tag :asset_seed_class_name, 'AssetType'

  .tab-content.form-section
    .tab-pane.fade.in#bridge
      .col-sm-6
        = f.input :facility_carried
        = f.association :operational_status_type, collection: OperationalStatusType.active
        = f.association :main_span_material_type, collection: StructureMaterialType.active
        = f.association :main_span_design_construction_type, collection: DesignConstructionType.active
        = f.association :approach_spans_material_type, collection: StructureMaterialType.active
        = f.association :approach_spans_design_construction_type, collection: DesignConstructionType.active
        = f.input :num_spans_main
        = f.input :num_spans_approach

      .col-sm-6
        = f.association :deck_condition_rating_type, collection: BridgeConditionRatingType.active
        = f.association :superstructure_condition_rating_type, collection: BridgeConditionRatingType.active
        = f.association :substructure_condition_rating_type, collection: BridgeConditionRatingType.active
        = f.association :channel_condition_type, collection: ChannelConditionType.active

    .tab-pane.fade.in#structure

    .tab-pane.fade.in.active#required
      .col-sm-6
        
        %h2.form-section-header
          Organization

        = f.association :organization, collection: Organization.all

        - if @asset.new_record?
          %h2.form-section-header
            Service Status

          = f.simple_fields_for :service_status_updates, @asset.service_status_updates.build do |update_event|
            = update_event.input :service_status_type_id, collection: ServiceStatusType.active, label: 'Service Status'

        
        %h2.form-section-header
          Identification & Classification

        = f.input :asset_tag, label: 'Asset ID'

        
        = f.association :asset_subtype, collection: AssetSubtype.where(asset_type: @asset_class_instance).order(:id), label: 'Subtype'

      .col-sm-6
        %h2.form-section-header
          Funding

        = f.input :purchase_cost, :wrapper => :vertical_append, :label => "Cost (Purchase)" do
          %span.input-group-addon
            %i.fa.fa-usd
          = f.number_field :purchase_cost, :class => "form-control", required: true, :label => false, :min => 0

        %h2.form-section-header
          Operations

        = f.input :in_service_date, :wrapper => :vertical_append, :label => "In Service Date" do
          = f.input_field :in_service_date, :as => :string, :class => 'form-control datepicker', :value => format_as_date(f.object.in_service_date)
          %span.input-group-addon
            %i.fa.fa-calendar

        %h2.form-section-header
          Procurement & Purchase

        = f.input :purchased_new, as: :radio_buttons, required: true, :wrapper_class => 'form-group radio-buttons-inline'

        = f.input :purchase_date, :wrapper => :vertical_append, :label => "Purchase Date" do
          = f.input_field :purchase_date, :as => :string, :class => 'form-control datepicker', :value => format_as_date(f.object.purchase_date)
          %span.input-group-addon
            %i.fa.fa-calendar

    .tab-pane.fade.in#recommended
      .col-sm-6

        %h2.form-section-header
          Identification & Classification

        = f.input :description

        = f.input :external_id

        .col-sm-6
          = f.input :quantity, as: :integer, input_html: { min: 0 }
        .col-sm-6
          = f.input :quantity_unit, collection: Uom.units

        - if @asset.new_record?
          %h2.form-section-header
            Condition

          = f.simple_fields_for :condition_updates, @asset.condition_updates.build do |update_event|
            = update_event.input :assessed_rating, required: false, input_html: {value: nil}, label: 'Condition'


      .col-sm-6
        %h2.form-section-header
          Characteristics

        = f.association :manufacturer
        = f.input :other_manufacturer

        = f.association :manufacturer_model
        = f.input :other_manufacturer_model

        = f.input :manufacture_year, label: 'Year of Manufacture', collection: get_years_to_date_collection.reverse.map{|y| [y, y]}, include_blank: true, input_html: { class: 'form-control' }




  .form-actions.form-section
    = f.button :submit, '+ Add Asset & Go to New Record', :class => 'btn btn-primary'