:ruby
  html_class = is_child ? 'bme' : 'element'
  indent_str = '&nbsp;'*indent*4
  parent = element.parent if is_child

%tr{class: "#{html_class}", data: {element_id: element.id, parent_element_id: parent&.id}}
  %td.left!= "#{indent_str}#{html_rjust(element.element_definition.number, 4)}"
  %td.left!= "#{indent_str}#{element.element_definition.short_name}"
  %td.right.total_quantity
    %span.number-display
      = format_as_integer(element.quantity)
    %input.number-input.form-control.required.positive-num{style: 'display: none;', type: 'number', required: 'required', min: 0, value: element.quantity}
  %td.left= element.element_definition.quantity_unit
  %td.right.cs1= format_as_integer(element.quantity - element.defects.sum('condition_state_2_quantity + condition_state_3_quantity + condition_state_4_quantity'))
  %td.right.cs2= format_as_integer(element.defects.sum(:condition_state_2_quantity))
  %td.right.cs3= format_as_integer(element.defects.sum(:condition_state_3_quantity))
  %td.right.cs4= format_as_integer(element.defects.sum(:condition_state_4_quantity))
  %td.center
    - if can?(:update, @inspection)
      - if is_child
        = render 'child_element_row_action_buttons', element: element
      - else
        = render 'element_row_action_buttons', element: element
- if element.notes.present?
  %tr.notes
    %td
    %td.left{colspan: 7}!= "#{indent_str}#{element.notes}"