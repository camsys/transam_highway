:ruby
  orgs = (can?(:view_all, Inspection) ? current_user.viewable_organizations : current_user.organizations)

= simple_form_for(:transam_workflow_model_proxy,
  :html => {:class => 'form-vertical', :id => 'open_assignments_form'},
  :url => fire_workflow_events_transam_workflow_index_path,
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
  :radio_buttons => :vertical_radio_and_checkboxes,
  :file => :vertical_file_input,
  :boolean => :vertical_boolean}) do |f|

  .row
    .col-sm-12
      - if state == 'ready'
        = f.button :submit, 'To Open', :class => "btn btn-primary assignment_form_submit", :id => 'reopen_workflow', disabled: true
      - elsif state == 'open'
        = f.button :submit, 'To Ready', :class => "btn btn-primary assignment_form_submit", :id => 'make_ready_workflow', disabled: true
      - elsif (state == 'assigned' && assigned_organization_id.to_i > 0)
        = f.button :submit, 'To Ready', :class => "btn btn-primary assignment_form_submit", :id => 'unassign_workflow', disabled: true

  = f.input :global_ids, as: :hidden
  = f.input :event_name, as: :hidden, input_html: {value: 'make_ready'}
  = f.input :include_updates, as: :hidden, input_html: {value: '1'} # field updates

  .row.group-team-fields{style: 'margin-top: 5px;'}
    .col-sm-6

      - if state == 'open'
        = f.input :assigned_organization_id, collection: orgs, label: reference_label('inspections', 'assigned_organization_id', 'Inspection Team'), include_blank: orgs .count > 1 ? 'Select One' : false, selected: orgs.count == 1 ? orgs.first.id : nil
      - elsif state == 'ready'
        = f.input :assigned_organization_id, as: :hidden, input_html: {value: assigned_organization_id}
        = f.input :inspector_ids, as: :hidden

:javascript

  $(document).ready(function() {

    $("#open_assignments_form input[type=submit]").click(function() {
        $("input[type=submit]", $(this).parents("form")).removeAttr("clicked");
        $(this).attr("clicked", "true");
    });
  });


  $('#open_assignments_form').validate({
    submitHandler: function(form){

      // disable fields if don't have permissions to submit
      $('.group-team-fields input').prop('disabled', "#{(can? :make_ready, Inspection.new) ? '' : 'true'}");

      $('#open_assignments_form #transam_workflow_model_proxy_global_ids').val(Array.from(selected_rows));

      var val = $("input[type=submit][clicked=true]").attr('id');
      if (val == 'reopen_workflow') {
        $('#transam_workflow_model_proxy_assigned_organization_id').val('');
        $('#transam_workflow_model_proxy_event_name').val('reopen');
      } else if (val == 'unassign_workflow') {
        $('#transam_workflow_model_proxy_include_updates').val(0);
        $('#transam_workflow_model_proxy_event_name').val('unassign');
      }

      form.submit();
    }
  });

  $('#transam_workflow_model_proxy_assigned_organization_id').change(function() {
    enable_disable_change_workflow();
  });
