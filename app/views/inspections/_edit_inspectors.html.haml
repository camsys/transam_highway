:css
  .inspector-assignment-label {
    display: block;
  }

  .inspector-checkboxes {
    padding-left: 0px;
    vertical-align: inherit;
  }

:ruby

  orgs = (can?(:view_all, Inspection) ? current_user.viewable_organizations : current_user.viewable_organizations.reject{|x| x.id == HighwayAuthority.first.id && !current_user.organization_ids.include?(HighwayAuthority.first.id)})

  inspectors = []
  User.active.with_role(:user).distinct.each do |user|
    user.organizations.distinct.each do |l|
      inspectors << {
        name: user.to_s,
        id: user.id,
        organization_id: l.id
      } if orgs.include? l
    end
  end

.modal-dialog.modal-lg
  .modal-content
    .modal-header
      %button.close{:data => {:dismiss => "modal"}}
        x
      %h3.modal-title Set Schedule
    .modal-body
      = simple_form_for(:transam_workflow_model_proxy,
                    :html => {:class => 'form-vertical inspection_form' },
                    :url => fire_workflow_events_transam_workflow_index_path,
                    :wrapper => :vertical_form,
                    :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes, :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|

        = f.input :transam_asset_id, as: :hidden, input_html: {value: @asset.highway_structure.id}

        = f.input :global_ids, as: :hidden, input_html: {value: @inspection.inspection.to_global_id}
        = f.input :to_state, as: :hidden
        = f.input :include_updates, as: :hidden, input_html: {value: '1'} # field updates

        .row
          .col-sm-6
            - enabled = (can?(:make_ready, @inspection.inspection) || can?(:switch_team, @inspection.inspection))
            = f.input :assigned_organization_id, collection: orgs, label: reference_label('inspections', 'assigned_organization_id', 'Inspection Team'), required: false, include_blank: true, selected: @inspection.assigned_organization_id, disabled: !enabled
          .col-sm-6
            - if can? :assign, @inspection.inspection
              = f.input :inspector_ids, as: :check_boxes, collection: @inspection.assigned_organization_id ? User.active.with_role(:user).distinct.joins(:organizations).where(organizations: {id: @inspection.assigned_organization_id}) : User.none, label: 'Inspectors', item_wrapper_class: 'checkbox-inline inspector-checkboxes', label_html: { class: 'inspector-assignment-label'}, required: false, checked: @inspection.inspector_ids

        .row
          .col-xs-12
            = f.submit 'Save', :class => 'btn btn-primary'
            %button.btn.btn-warning#cancel_inspection_form{type: 'button'}
              Cancel

:javascript

  $('.inspection_form').validate({
    submitHandler: function(form) {
      if ($('.transam_workflow_model_proxy_inspector_ids input[type="checkbox"]:checked').length > 0) {
        $('#transam_workflow_model_proxy_to_state').val('ready');
      } else if (parseInt($('#transam_workflow_model_proxy_assigned_organization_id').val()) > 0) {
        $('#transam_workflow_model_proxy_to_state').val('ready');
      } else {
       $('#transam_workflow_model_proxy_to_state').val('open');
      }

      form.submit();
    }
  });

  $('#cancel_inspection_form').click(function() {
    $('#form-modal').modal('hide');
  });

  function new_inspector_checkbox(inspector) {
    return '<span class="checkbox checkbox-inline inspector-checkboxes"><label for="transam_workflow_model_proxy_inspector_ids_' + inspector.id +  '"><input class="check_boxes" type="checkbox" value="' + inspector.id + '" name="transam_workflow_model_proxy[inspector_ids][]" id="transam_workflow_model_proxy_inspector_ids_' + inspector.id + '">' + inspector.name + '</label></span>';
  }

  function update_inspection_inspectors_by_team(team_id) {
    if(team_id) {
      team_id = parseInt(team_id);
    }
    $('.inspector-checkboxes').remove();
    $('input[name="transam_workflow_model_proxy[inspector_ids][]"]').val('');

    var inspectors = #{inspectors.to_json.html_safe || {}};
    inspectors.filter(function(l){return l.organization_id == team_id;}).forEach(function(l) {
      $('.transam_workflow_model_proxy_inspector_ids').append(new_inspector_checkbox(l));
    });
  }

  $('#transam_workflow_model_proxy_assigned_organization_id').change(function() {
    var team_id = $(this).val();
    update_inspection_inspectors_by_team(team_id);
  });

