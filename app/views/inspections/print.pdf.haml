.document
  -#- if @inspection.class == BridgeCondition
  -#  = render partial: 'inspections/vertical_report_header.pdf.haml', :locals => {:inspection => @inspection}
  -#  = render partial: 'inspections/vertical_report.pdf.haml', :locals => {:inspection => @inspection}
  -#  .div.alwaysbreak { page-break-before: always; }

  -@typed_inspection = @inspection
  = render partial: 'inspections/structure_inventory_appraisal_header.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
  = render partial: 'inspections/structure_inventory_appraisal_part1.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
  &nbsp;
  .div.alwaysbreak
  = render partial: 'inspections/structure_inventory_appraisal_header.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
  = render partial: 'inspections/structure_inventory_appraisal_part2.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection, :methods => methods}


  -@inspection.highway_structure.roadways.order(:on_under_indicator).each do |roadway|
    &nbsp;
    .div.alwaysbreak
    = render partial: 'inspections/structure_inventory_appraisal_header.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection, :roadway => roadway }
    = render partial: 'inspections/structure_inventory_appraisal_part3.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection, :roadway => roadway, :methods => methods}

  &nbsp;
  .div.alwaysbreak

  = render :partial => 'inspections/element_inspection_data_header.html.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
  = render :partial => 'inspections/elements_table.html.haml', :locals => {:inspection => @inspection, :is_for_pdf => true}
  &nbsp;
  .div.alwaysbreak

  -inspections_images = Image.where(imagable: @inspection.inspection)
  -elements_images = Image.where(imagable: @inspection.elements)
  -defect_locations_images = Image.where(imagable: DefectLocation.where(defect: Defect.where(inspection: @inspection)))
  -#Exportable true means only photos that have use photo yes will be used.
  -inspections_images = inspections_images.or(elements_images).or(defect_locations_images).where(exportable: true).reorder("CASE WHEN imagable_type = 'Inspection' THEN 0 ELSE 1 END DESC, created_at DESC")

  - if inspections_images.any?
    = render :partial => 'inspections/report_photo_log_header.html.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
    = render :partial => 'inspections/report_photo_log.pdf.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection, :inspections_images => inspections_images}
    &nbsp;
    .div.alwaysbreak

  = render :partial => 'maintenance_service_orders/maintenance_recommendations_header.html.haml', :locals => {:inspection => @inspection}
  = render :partial => 'maintenance_service_orders/maintenance_recommendations.html.haml', :locals => {:inspection => @inspection}
  &nbsp;
  .div.alwaysbreak

  = render :partial => 'inspections/inspectors_header.html.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}
  = render :partial => 'inspections/inspectors.html.haml', :locals => {:inspection => @inspection, :typed_inspection => @typed_inspection}