class AddDefectsElementsDefinitions < ActiveRecord::DataMigration
  def up
    # These mappings are based solely on Materials in Appendix D of DefectMapping.pdf
    defects_elements = {
      1000 => [28, 29, 30, 60, 65, 102, 106, 107, 112, 113, 118, 120, 136, 141, 142, 147, 148, 149, 152, 157, 161, 162, 202, 203,  207, 210, 211, 218, 219, 225, 229, 231, 236, 240, 243, 300, 304, 310, 311, 313, 314, 316, 330, 333],
      1010 => [28, 29, 30, 60, 65, 102, 106, 107, 112, 113, 118, 120, 136, 141, 142, 147, 148, 149, 152, 157, 161, 162, 202, 203,  207, 210, 211, 218, 219, 225, 229, 231, 236, 240, 243, 300, 304, 310, 311, 313, 314, 316, 330, 333],
      1020 => [28, 29, 30, 60, 65, 102, 106, 107, 112, 113, 118, 120, 136, 141, 142, 147, 148, 149, 152, 157, 161, 162, 202, 203,  207, 210, 211, 218, 219, 225, 229, 231, 236, 240, 243, 300, 304, 310, 311, 313, 314, 316, 330, 333],
      1080 => [12, 13, 15, 16, 38, 39, 60, 65, 104, 105, 106, 109, 110, 112, 115, 116, 142, 143, 144, 145, 154, 155, 157, 203, 204, 205, 210, 211, 213, 215, 217, 218, 220, 226, 227, 229, 233, 234, 236, 241, 243, 244, 245, 300, 301, 302, 303, 304, 305, 306, 320, 321, 331, 333, 334],
      1090 => [12, 13, 15, 16, 38, 39, 104, 105, 109, 110, 115, 116, 143, 144, 154, 155, 204, 205, 210, 215, 220, 226, 227, 233, 234, 241, 245, 320, 321, 331],
      1100 => [13, 15, 39, 104, 109, 115, 143, 154, 204, 226, 233, 245, 320],
      1110 => [13, 15, 39, 104, 109, 115, 143, 154, 204, 226, 233, 245, 320],
      1120 => [12, 13, 15, 16, 38, 39, 60, 65, 104, 105, 106, 109, 110, 112, 115, 116, 142, 143, 144, 145, 154, 155, 157, 203, 204, 205, 210, 211, 213, 215, 217, 218, 220, 226, 227, 229, 233, 234, 236, 241, 243, 244, 245, 300, 301, 302, 303, 304, 305, 306, 320, 321, 331, 333, 334],
      1130 => [12, 16, 38, 60, 65, 110, 112, 116, 118, 142, 144, 155, 157, 203, 205, 210, 211, 215, 218, 220, 227, 229, 234, 236, 241, 243, 321, 331, 333],
      1140 => [31, 54, 111, 117, 135, 146, 156, 206, 208, 212, 216, 228, 235, 242, 332],
      1150 => [31, 54, 111, 117, 135, 146, 156, 206, 208, 212, 216, 228, 235, 242, 332],
      1160 => [31, 54, 111, 117, 135, 146, 156, 206, 208, 212, 216, 228, 235, 242, 332],
      1170 => [31, 54, 111, 117, 135, 146, 156, 206, 208, 212, 216, 228, 235, 242, 332],
      1180 => [31, 54, 111, 117, 135, 146, 156, 206, 208, 212, 216, 228, 235, 242, 332],
      1190 => [12, 13, 15, 16, 38, 39, 104, 105, 109, 110, 115, 116, 143, 144, 154, 155, 204, 205, 210, 215, 220, 226, 227, 233, 234, 241, 245, 320, 321, 331],
      1220 => [60, 65, 106, 112, 118, 136, 142, 149, 157, 203, 211, 218, 229, 236, 243, 306, 316, 333],
      1610 => [145, 213, 217, 244, 334],
      1620 => [145, 213, 217, 244, 334],
      1630 => [145, 213, 217, 244, 334],
      1640 => [145, 213, 217, 244, 334],
      1900 => [12, 13, 15, 16, 28, 29, 30, 31, 38, 39, 54, 60, 65, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 161, 162, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 320, 321, 330, 331, 332, 333, 334],
      2210 => [310, 311, 312, 313, 314, 315, 316],
      2220 => [310, 311, 312, 313, 314, 315, 316],
      2230 => [310],
      2240 => [310, 311, 312, 313, 314, 315, 316],
      2310 => [300, 301, 302, 303, 304, 305, 306],
      2320 => [300, 301, 302, 303, 304, 305, 306],
      2330 => [300, 301, 302, 303, 304, 305, 306],
      2340 => [300, 301, 302, 303, 304, 305, 306],
      2350 => [300, 301, 302, 303, 304, 305, 306],
      2360 => [300, 301, 302, 303, 304, 305, 306],
      2370 => [300, 301, 302, 303, 304, 305, 306],
      3210 => [510],
      3220 => [510],
      3230 => [510],
      3410 => [515],
      3420 => [515],
      3430 => [515],
      3440 => [515],
      3510 => [521],
      3540 => [521],
      3600 => [520],
      4000 => [12, 13, 15, 16, 28, 29, 30, 31, 38, 39, 54, 60, 65, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 161, 162, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 320, 321, 330, 331, 332, 333, 334],
      6000 => [12, 13, 15, 16, 28, 29, 30, 31, 38, 39, 54, 60, 65, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 161, 162, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 320, 321, 330, 331, 332, 333, 334],
      7000 => nil
    }

    defects_elements.each do |defect, elements|
      DefectDefinition.find_by(number: defect).element_definition_ids =
        unless elements
          ElementDefinition.pluck(:id)
        else
          ElementDefinition.where(number: elements).pluck(:id)
        end
    end
  end
  def down
    true
  end
end